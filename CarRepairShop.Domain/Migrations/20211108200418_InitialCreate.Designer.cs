// <auto-generated />
using System;
using CarRepairShop.Domain.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarRepairShop.Domain.Migrations
{
    [DbContext(typeof(RepairServiceContext))]
    [Migration("20211108200418_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarRepairShop.Domain.Models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarChassis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientuserId")
                        .HasColumnType("int");

                    b.HasKey("CarId");

                    b.HasIndex("ClientuserId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarRepairShop.Domain.Models.Clientuser", b =>
                {
                    b.Property<int>("ClientuserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Jmbg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surename")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientuserId");

                    b.ToTable("Clientusers");
                });

            modelBuilder.Entity("CarRepairShop.Domain.Models.Mechanicman", b =>
                {
                    b.Property<int>("MechanicmanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Jmbg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surename")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MechanicmanId");

                    b.ToTable("Mechanicmans");
                });

            modelBuilder.Entity("CarRepairShop.Domain.Models.MechanicmanRole", b =>
                {
                    b.Property<int>("MechanicmanRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MechanicManRoleName")
                        .HasColumnType("int");

                    b.Property<int>("MechanicmanId")
                        .HasColumnType("int");

                    b.HasKey("MechanicmanRoleId");

                    b.HasIndex("MechanicmanId")
                        .IsUnique();

                    b.ToTable("MechanicmanRole");
                });

            modelBuilder.Entity("CarRepairShop.Domain.Models.RepairService", b =>
                {
                    b.Property<int>("RepairServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTimeOfService")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MechanicmanId")
                        .HasColumnType("int");

                    b.HasKey("RepairServiceId");

                    b.HasIndex("CarId");

                    b.HasIndex("MechanicmanId");

                    b.ToTable("RepairService");
                });

            modelBuilder.Entity("CarRepairShop.Domain.Models.Car", b =>
                {
                    b.HasOne("CarRepairShop.Domain.Models.Clientuser", "Clientuser")
                        .WithMany("Cars")
                        .HasForeignKey("ClientuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarRepairShop.Domain.Models.MechanicmanRole", b =>
                {
                    b.HasOne("CarRepairShop.Domain.Models.Mechanicman", "Mechanicman")
                        .WithOne("MechanicmanRole")
                        .HasForeignKey("CarRepairShop.Domain.Models.MechanicmanRole", "MechanicmanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarRepairShop.Domain.Models.RepairService", b =>
                {
                    b.HasOne("CarRepairShop.Domain.Models.Car", "Car")
                        .WithMany("RepairServices")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRepairShop.Domain.Models.Mechanicman", "Mechanicman")
                        .WithMany("RepairServices")
                        .HasForeignKey("MechanicmanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
